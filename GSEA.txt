#???ð?
library(survival)
library(survminer)
GroupFile="ICDgroup.txt"     #?????Ľ????ļ?
cliFile="time1.txt"           #?????????ļ?
setwd("F:\\LUADwork\\16.groupSur")      #???ù???Ŀ¼
#??ȡ?????ļ?
Group=read.table(GroupFile, header=T, sep="\t", check.names=F, row.names=1)
cli=read.table(cliFile, header=T, sep="\t", check.names=F, row.names=1)
colnames(cli)=c("futime", "fustat")
cli$futime=cli$futime/365
#???ݺϲ?
sameSample=intersect(row.names(Group), row.names(cli))
rt=cbind(cli[sameSample,,drop=F], Group[sameSample,,drop=F])
rt[,"Group"]=factor(rt[,"Group"], levels=c("ICD low","ICD high"))
#?Ƚ?ICD?ߵͱ???????????????
length=length(levels(factor(rt$Group)))
diff=survdiff(Surv(futime, fustat) ~ Group, data = rt)
pValue=1-pchisq(diff$chisq, df=length-1)
if(pValue<0.001){
pValue="p<0.001"
}else{
pValue=paste0("p=",sprintf("%.03f",pValue))
}
fit <- survfit(Surv(futime, fustat) ~ Group, data = rt)
#????????????
bioCol=c("#0066FF","#FF0000","#FF9900","#6E568C","#7CC767","#223D6C","#D20A13","#FFD121","#088247","#11AA4D")
bioCol=bioCol[1:length]
surPlot=ggsurvplot(fit,
data=rt,
conf.int=F,
pval=pValue,
pval.size=6,
legend.title="Group",
legend.labs=levels(factor(rt[,"Group"])),
legend = c(0.8, 0.8),
font.legend=10,
xlab="Time(years)",
break.time.by=2,
palette=bioCol,
surv.median.line="hv",
risk.table=T,
cumevents=F,
risk.table.height=.25)
#????ͼ??
pdf(file="survival1.pdf", width=6.5, height=5, onefile=FALSE)
print(surPlot)
dev.off()
#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#BiocManager::install("limma")
#install.packages("ggplot2")
#install.packages("pheatmap")
#???ð?
library(limma)
library(ggplot2)
library(pheatmap)
conGroup="ICD low"         #??????
treatGroup="ICD high"      #ʵ????
expFile="LUAD_merged_FPKM.txt"       #?????????ļ?
cluFile="ICDgroup.txt"     #?????Ľ????ļ?
logFCfilter=1              #logFC????????(logFC=0.585,???챶??1.5??;logFC=1,????2??;logFC=2,????4??)
fdrFilter=0.05             #fdr????????
setwd("F:\\LUADwork\\17.groupDiff")     #???ù???Ŀ¼
#??ȡ?????????ļ?,?????????ļ?????
rt=read.table(expFile, header=T, sep="\t", check.names=F)
rt=as.matrix(rt)
rownames(rt)=rt[,1]
exp=rt[,2:ncol(rt)]
dimnames=list(rownames(exp), colnames(exp))
data=matrix(as.numeric(as.matrix(exp)), nrow=nrow(exp), dimnames=dimnames)
data=avereps(data)
#ȥ????????Ʒ
group=sapply(strsplit(colnames(data),"\\-"), "[", 4)
group=sapply(strsplit(group,""), "[", 1)
group=gsub("2", "1", group)
data=data[,group==0]
colnames(data)=gsub("(.*?)\\-(.*?)\\-(.*?)\\-.*", "\\1\\-\\2\\-\\3", colnames(data))
#??ȡ?????Ľ????ļ?
Type=read.table(cluFile, header=T, sep="\t", check.names=F, row.names=1)
sameSample=intersect(colnames(data), row.names(Type))
data=data[,sameSample,drop=F]
Type=Type[sameSample,,drop=F]
#??ȡ??ͬ????????Ʒ
low=Type[Type$Group==conGroup,,drop=F]          #??ȡICD?ͱ?????????Ʒ
high=Type[Type$Group==treatGroup,,drop=F]       #??ȡICD?߱?????????Ʒ
dataLow=data[,row.names(low)]
dataHigh=data[,row.names(high)]
data=cbind(dataLow, dataHigh)
data=data[rowMeans(data)>0.1,]
conNum=ncol(dataLow)
treatNum=ncol(dataHigh)
Type=c(rep(1,conNum), rep(2,treatNum))
#????????
outTab=data.frame()
for(i in row.names(data)){
rt=data.frame(expression=data[i,], Type=Type)
wilcoxTest=wilcox.test(expression ~ Type, data=rt)
pvalue=wilcoxTest$p.value
conGeneMeans=mean(data[i,1:conNum])
treatGeneMeans=mean(data[i,(conNum+1):ncol(data)])
logFC=log2(treatGeneMeans)-log2(conGeneMeans)
conMed=median(data[i,1:conNum])
treatMed=median(data[i,(conNum+1):ncol(data)])
diffMed=treatMed-conMed
if( ((logFC>0) & (diffMed>0)) | ((logFC<0) & (diffMed<0)) ){
outTab=rbind(outTab,cbind(gene=i,lowMean=conGeneMeans,highMean=treatGeneMeans,logFC=logFC,pvalue=pvalue))
}
}
#???ð?
library(limma)
library(ggplot2)
library(pheatmap)
conGroup="ICD low"         #??????
treatGroup="ICD high"      #ʵ????
expFile="LUAD_merged_FPKM.txt"       #?????????ļ?
cluFile="ICDgroup.txt"     #?????Ľ????ļ?
logFCfilter=1              #logFC????????(logFC=0.585,???챶??1.5??;logFC=1,????2??;logFC=2,????4??)
fdrFilter=0.05             #fdr????????
setwd("F:\\LUADwork\\17.groupDiff")     #???ù???Ŀ¼
#??ȡ?????????ļ?,?????????ļ?????
rt=read.table(expFile, header=T, sep="\t", check.names=F)
#???ð?
library(limma)
library(ggplot2)
library(pheatmap)
conGroup="ICD low"         #??????
treatGroup="ICD high"      #ʵ????
expFile="LUAD_merged_FPKM.txt"       #?????????ļ?
cluFile="ICDgroup.txt"     #?????Ľ????ļ?
logFCfilter=1              #logFC????????(logFC=0.585,???챶??1.5??;logFC=1,????2??;logFC=2,????4??)
fdrFilter=0.05             #fdr????????
setwd("F:\\LUADwork\\17.groupDiff")     #???ù???Ŀ¼
#??ȡ?????????ļ?,?????????ļ?????
rt=read.table(expFile, header=T, sep="\t", check.names=F)
rt=as.matrix(rt)
rownames(rt)=rt[,1]
exp=rt[,2:ncol(rt)]
dimnames=list(rownames(exp), colnames(exp))
data=matrix(as.numeric(as.matrix(exp)), nrow=nrow(exp), dimnames=dimnames)
data=avereps(data)
#ȥ????????Ʒ
group=sapply(strsplit(colnames(data),"\\-"), "[", 4)
group=sapply(strsplit(group,""), "[", 1)
group=gsub("2", "1", group)
data=data[,group==0]
colnames(data)=gsub("(.*?)\\-(.*?)\\-(.*?)\\-.*", "\\1\\-\\2\\-\\3", colnames(data))
#??ȡ?????Ľ????ļ?
Type=read.table(cluFile, header=T, sep="\t", check.names=F, row.names=1)
sameSample=intersect(colnames(data), row.names(Type))
data=data[,sameSample,drop=F]
Type=Type[sameSample,,drop=F]
#??ȡ??ͬ????????Ʒ
low=Type[Type$Group==conGroup,,drop=F]          #??ȡICD?ͱ?????????Ʒ
high=Type[Type$Group==treatGroup,,drop=F]       #??ȡICD?߱?????????Ʒ
dataLow=data[,row.names(low)]
dataHigh=data[,row.names(high)]
data=cbind(dataLow, dataHigh)
data=data[rowMeans(data)>0.1,]
conNum=ncol(dataLow)
treatNum=ncol(dataHigh)
Type=c(rep(1,conNum), rep(2,treatNum))
#????????
outTab=data.frame()
for(i in row.names(data)){
rt=data.frame(expression=data[i,], Type=Type)
wilcoxTest=wilcox.test(expression ~ Type, data=rt)
pvalue=wilcoxTest$p.value
conGeneMeans=mean(data[i,1:conNum])
treatGeneMeans=mean(data[i,(conNum+1):ncol(data)])
logFC=log2(treatGeneMeans)-log2(conGeneMeans)
conMed=median(data[i,1:conNum])
treatMed=median(data[i,(conNum+1):ncol(data)])
diffMed=treatMed-conMed
if( ((logFC>0) & (diffMed>0)) | ((logFC<0) & (diffMed<0)) ){
outTab=rbind(outTab,cbind(gene=i,lowMean=conGeneMeans,highMean=treatGeneMeans,logFC=logFC,pvalue=pvalue))
}
}
pvalue=outTab[,"pvalue"]
fdr=p.adjust(as.numeric(as.vector(pvalue)), method="fdr")
outTab=cbind(outTab, fdr=fdr)
write.table(outTab, file="all.txt", sep="\t", row.names=F, quote=F)
#?????????????Ľ???
outDiff=outTab[( abs(as.numeric(as.vector(outTab$logFC)))>logFCfilter & as.numeric(as.vector(outTab$fdr))<fdrFilter),]
write.table(outDiff, file="diff.txt", sep="\t", row.names=F, quote=F)
#?????????????ı???????
diffExp=rbind(ID=colnames(data[as.vector(outDiff[,1]),]), data[as.vector(outDiff[,1]),])
write.table(diffExp, file="diffGeneExp.txt", sep="\t", col.names=F, quote=F)
#???Ʋ???????????ͼ
geneNum=50    #????չʾ????????Ŀ
outDiff=outDiff[order(as.numeric(as.vector(outDiff$logFC))),]
diffGeneName=as.vector(outDiff[,1])
diffLength=length(diffGeneName)
hmGene=c()
if(diffLength>(2*geneNum)){
hmGene=diffGeneName[c(1:geneNum,(diffLength-geneNum+1):diffLength)]
}else{
hmGene=diffGeneName
}
hmExp=log2(data[hmGene,]+0.01)
Type=c(rep(conGroup,conNum),rep(treatGroup,treatNum))
Type=factor(Type, levels=c(conGroup, treatGroup))
names(Type)=colnames(data)
Type=as.data.frame(Type)
pdf(file="heatmap1.pdf", width=10, height=7)
pheatmap(hmExp,
annotation=Type,
color = colorRampPalette(c(rep("blue",5), "white", rep("red",5)))(50),
cluster_cols =F,
show_colnames = F,
scale="row",
fontsize = 8,
fontsize_row=5,
fontsize_col=8)
dev.off()
#???Ʋ????????Ļ?ɽͼ
pdf(file="vol1.pdf", width=5, height=5)
xMax=5
yMax=30
plot(as.numeric(as.vector(outTab$logFC)), -log10(outTab$fdr), xlab="logFC",ylab="-log10(fdr)",
main="Volcano", ylim=c(0,yMax),xlim=c(-xMax,xMax),yaxs="i",pch=20, cex=1)
diffSub=subset(outTab, fdr<fdrFilter & as.numeric(as.vector(logFC))>logFCfilter)
points(as.numeric(as.vector(diffSub$logFC)), -log10(diffSub$fdr), pch=20, col="red",cex=1)
diffSub=subset(outTab, fdr<fdrFilter & as.numeric(as.vector(logFC))<(-logFCfilter))
points(as.numeric(as.vector(diffSub$logFC)), -log10(diffSub$fdr), pch=20, col="green",cex=1)
abline(v=0,lty=2,lwd=3)
dev.off()
#???ð?
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
library(ggplot2)
library(circlize)
library(RColorBrewer)
library(dplyr)
library("ggpubr")
library(ComplexHeatmap)
#???ð?
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
library(ggplot2)
library(circlize)
library(RColorBrewer)
library(dplyr)
library("ggpubr")
library(ComplexHeatmap)
pvalueFilter=0.05      #pֵ????????
qvalueFilter=0.05      #????????pֵ????????
#??????ɫ
colorSel="qvalue"
if(qvalueFilter>0.05){
colorSel="pvalue"
}
setwd("F:\\LUADwork\\18.GO")       #???ù???Ŀ¼
rt=read.table("diff.txt", header=T, sep="\t", check.names=F)     #??ȡ?????ļ?
#??ȡ??????????????, ??????????ת??Ϊ????id
genes=unique(as.vector(rt[,1]))
entrezIDs=mget(genes, org.Hs.egSYMBOL2EG, ifnotfound=NA)
entrezIDs=as.character(entrezIDs)
gene=entrezIDs[entrezIDs!="NA"]        #ȥ??????idΪNA?Ļ???
#GO????????
kk=enrichGO(gene=gene, OrgDb=org.Hs.eg.db, pvalueCutoff=1, qvalueCutoff=1, ont="all", readable=T)
GO=as.data.frame(kk)
GO=GO[(GO$pvalue<pvalueFilter & GO$qvalue<qvalueFilter),]
#???渻??????
write.table(GO, file="GO.txt", sep="\t", quote=F, row.names = F)
#??????ʾGO????Ŀ
showNum=10
if(nrow(GO)<30){
showNum=nrow(GO)
}
#??״ͼ
pdf(file="barplot.pdf", width=8, height=7)
bar=barplot(kk, drop=TRUE, showCategory=showNum, label_format=130, split="ONTOLOGY", color=colorSel) + facet_grid(ONTOLOGY~., scale='free')
print(bar)
dev.off()
#????ͼ
pdf(file="bubble.pdf", width=8, height=7)
bub=dotplot(kk, showCategory=showNum, orderBy="GeneRatio", label_format=130, split="ONTOLOGY", color=colorSel) + facet_grid(ONTOLOGY~., scale='free')
print(bub)
dev.off()
###########????GOȦͼ###########
ontology.col=c("#00AFBB", "#E7B800", "#90EE90")
data=GO[order(GO$p.adjust),]
datasig=data[data$p.adjust<0.05,,drop=F]
BP = datasig[datasig$ONTOLOGY=="BP",,drop=F]
CC = datasig[datasig$ONTOLOGY=="CC",,drop=F]
MF = datasig[datasig$ONTOLOGY=="MF",,drop=F]
BP = head(BP,6)
CC = head(CC,6)
MF = head(MF,6)
data = rbind(BP,CC,MF)
main.col = ontology.col[as.numeric(as.factor(data$ONTOLOGY))]
#????Ȧͼ????
BgGene = as.numeric(sapply(strsplit(data$BgRatio,"/"),'[',1))
Gene = as.numeric(sapply(strsplit(data$GeneRatio,'/'),'[',1))
ratio = Gene/BgGene
logpvalue = -log(data$pvalue,10)
logpvalue.col = brewer.pal(n = 8, name = "Reds")
f = colorRamp2(breaks = c(0,2,4,6,8,10,15,20), colors = logpvalue.col)
BgGene.col = f(logpvalue)
df = data.frame(GO=data$ID,start=1,end=max(BgGene))
rownames(df) = df$GO
bed2 = data.frame(GO=data$ID,start=1,end=BgGene,BgGene=BgGene,BgGene.col=BgGene.col)
bed3 = data.frame(GO=data$ID,start=1,end=Gene,BgGene=Gene)
bed4 = data.frame(GO=data$ID,start=1,end=max(BgGene),ratio=ratio,col=main.col)
bed4$ratio = bed4$ratio/max(bed4$ratio)*9.5
#????Ȧͼ?????岿??
pdf("GO.circlize.pdf",width=10,height=10)
par(omi=c(0.1,0.1,0.1,1.5))
circos.par(track.margin=c(0.01,0.01))
circos.genomicInitialize(df,plotType="none")
circos.trackPlotRegion(ylim = c(0, 1), panel.fun = function(x, y) {
sector.index = get.cell.meta.data("sector.index")
xlim = get.cell.meta.data("xlim")
ylim = get.cell.meta.data("ylim")
circos.text(mean(xlim), mean(ylim), sector.index, cex = 0.8, facing = "bending.inside", niceFacing = TRUE)
}, track.height = 0.08, bg.border = NA,bg.col = main.col)
for(si in get.all.sector.index()) {
circos.axis(h = "top", labels.cex = 0.6, sector.index = si,track.index = 1,
major.at=seq(0,max(BgGene),by=100),labels.facing = "clockwise")
}
f = colorRamp2(breaks = c(-1, 0, 1), colors = c("green", "black", "red"))
circos.genomicTrack(bed2, ylim = c(0, 1),track.height = 0.1,bg.border="white",
panel.fun = function(region, value, ...) {
i = getI(...)
circos.genomicRect(region, value, ytop = 0, ybottom = 1, col = value[,2],
border = NA, ...)
circos.genomicText(region, value, y = 0.4, labels = value[,1], adj=0,cex=0.8,...)
})
circos.genomicTrack(bed3, ylim = c(0, 1),track.height = 0.1,bg.border="white",
panel.fun = function(region, value, ...) {
i = getI(...)
circos.genomicRect(region, value, ytop = 0, ybottom = 1, col = '#BA55D3',
border = NA, ...)
circos.genomicText(region, value, y = 0.4, labels = value[,1], cex=0.9,adj=0,...)
})
circos.genomicTrack(bed4, ylim = c(0, 10),track.height = 0.35,bg.border="white",bg.col="grey90",
panel.fun = function(region, value, ...) {
cell.xlim = get.cell.meta.data("cell.xlim")
cell.ylim = get.cell.meta.data("cell.ylim")
for(j in 1:9) {
y = cell.ylim[1] + (cell.ylim[2]-cell.ylim[1])/10*j
circos.lines(cell.xlim, c(y, y), col = "#FFFFFF", lwd = 0.3)
}
circos.genomicRect(region, value, ytop = 0, ybottom = value[,1], col = value[,2],
border = NA, ...)
#circos.genomicText(region, value, y = 0.3, labels = value[,1], ...)
})
circos.clear()
#????Ȧͼ?м???ͼ??
middle.legend = Legend(
labels = c('Number of Genes','Number of Select','Rich Factor(0-1)'),
type="points",pch=c(15,15,17),legend_gp = gpar(col=c('pink','#BA55D3',ontology.col[1])),
title="",nrow=3,size= unit(3, "mm")
)
circle_size = unit(1, "snpc")
draw(middle.legend,x=circle_size*0.42)
#????GO??????ͼ??
main.legend = Legend(
labels = c("Biological Process","Cellular Component", "Molecular Function"),  type="points",pch=15,
legend_gp = gpar(col=ontology.col), title_position = "topcenter",
title = "ONTOLOGY", nrow = 3,size = unit(3, "mm"),grid_height = unit(5, "mm"),
grid_width = unit(5, "mm")
)
#??????????pvalue??ͼ??
logp.legend = Legend(
labels=c('(0,2]','(2,4]','(4,6]','(6,8]','(8,10]','(10,15]','(15,20]','>=20'),
type="points",pch=16,legend_gp=gpar(col=logpvalue.col),title="-log10(Pvalue)",
title_position = "topcenter",grid_height = unit(5, "mm"),grid_width = unit(5, "mm"),
size = unit(3, "mm")
)
lgd = packLegend(main.legend,logp.legend)
circle_size = unit(1, "snpc")
print(circle_size)
draw(lgd, x = circle_size*0.85, y=circle_size*0.55,just = "left")
dev.off()
#???ð?
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
library(ggplot2)
library(circlize)
library(RColorBrewer)
library(dplyr)
library(ComplexHeatmap)
pvalueFilter=0.05      #pֵ????????
qvalueFilter=0.05      #????????pֵ????????
#??????ɫ
colorSel="qvalue"
if(qvalueFilter>0.05){
colorSel="pvalue"
}
setwd("F:\\LUADwork\\19.KEGG")      #???ù???Ŀ¼
rt=read.table("diff.txt", header=T, sep="\t", check.names=F)     #??ȡ?????ļ?
#??ȡ??????????????,??????????ת??Ϊ????id
genes=unique(as.vector(rt[,1]))
entrezIDs=mget(genes, org.Hs.egSYMBOL2EG, ifnotfound=NA)
entrezIDs=as.character(entrezIDs)
rt=data.frame(genes, entrezID=entrezIDs)
gene=entrezIDs[entrezIDs!="NA"]        #ȥ??????idΪNA?Ļ???
#KEGG????????
kk <- enrichKEGG(gene=gene, organism="hsa", pvalueCutoff=1, qvalueCutoff=1)
KEGG=as.data.frame(kk)
KEGG$geneID=as.character(sapply(KEGG$geneID,function(x)paste(rt$genes[match(strsplit(x,"/")[[1]],as.character(rt$entrezID))],collapse="/")))
KEGG=KEGG[(KEGG$pvalue<pvalueFilter & KEGG$qvalue<qvalueFilter),]
#?????????????Ľ???
write.table(KEGG, file="KEGG.txt", sep="\t", quote=F, row.names = F)
#??????ʾͨ·????Ŀ
showNum=30     #չʾ????????????ǰ30??ͨ·
if(nrow(KEGG)<showNum){
showNum=nrow(KEGG)
}
#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
#BiocManager::install("limma")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("DOSE")
#BiocManager::install("clusterProfiler")
#BiocManager::install("enrichplot")
#???ð?
library(limma)
library(org.Hs.eg.db)
library(clusterProfiler)
library(enrichplot)
allFile="all.txt"      #???л????Ĳ????????ļ?
gmtFile="c2.cp.kegg.symbols.gmt"      #???????ļ?
setwd("F:\\LUADwork\\20.GSEA")     #???ù???Ŀ¼
#??ȡ?????ļ?,?????????ļ?????????
rt=read.table(allFile, header=T, sep="\t", check.names=F)
rt=rt[order(rt[,"logFC"],decreasing=T),]
logFC=as.vector(rt[,"logFC"])
names(logFC)=as.vector(rt[,1])
#???????????ļ?
gmt=read.gmt(gmtFile)
#???????õĻ???????GSEA????????
kk=GSEA(logFC, TERM2GENE=gmt, pvalueCutoff = 1)
kkTab=as.data.frame(kk)
kkTab=kkTab[kkTab$p.adjust<0.05,]
write.table(kkTab,file="GSEA.result.txt",sep="\t",quote=F,row.names = F)
#????ICD?߱????鸻????ͼ??
kkUp=kkTab[kkTab$NES>0,]
termNum=5     #????չʾͨ·????Ŀ??չʾǰ5??????????????ͨ·
if(nrow(kkUp)>=termNum){
showTerm=row.names(kkUp)[1:termNum]      #??ȡչʾͨ·??????
gseaplot=gseaplot2(kk, showTerm, base_size=8, title="Enriched in ICD high group")
pdf(file="GSEA.highrisk.pdf", width=7, height=5.5)
print(gseaplot)
dev.off()
}
#????ICD?ͱ????鸻????ͼ??
kkDown=kkTab[kkTab$NES<0,]
termNum=5     #????չʾͨ·????Ŀ??չʾǰ5??????????????ͨ·
if(nrow(kkDown)>=termNum){
showTerm=row.names(kkDown)[1:termNum]      #??ȡչʾͨ·??????
gseaplot=gseaplot2(kk, showTerm, base_size=8, title="Enriched in ICD low group")
pdf(file="GSEA.lowrisk.pdf", width=7, height=5.5)
print(gseaplot)
dev.off()
}
#???ð?
library(limma)
library(org.Hs.eg.db)
library(clusterProfiler)
library(enrichplot)
allFile="all.txt"      #???л????Ĳ????????ļ?
gmtFile="c2.cp.kegg.symbols.gmt"      #???????ļ?
setwd("F:\\LUADwork\\20.GSEA")     #???ù???Ŀ¼
#??ȡ?????ļ?,?????????ļ?????????
rt=read.table(allFile, header=T, sep="\t", check.names=F)
rt=rt[order(rt[,"logFC"],decreasing=T),]
logFC=as.vector(rt[,"logFC"])
names(logFC)=as.vector(rt[,1])
#???????????ļ?
gmt=read.gmt(gmtFile)
#???????õĻ???????GSEA????????
kk=GSEA(logFC, TERM2GENE=gmt, pvalueCutoff = 1)
kkTab=as.data.frame(kk)
kkTab=kkTab[kkTab$p.adjust<0.05,]
write.table(kkTab,file="GSEA.result.txt",sep="\t",quote=F,row.names = F)
#????ICD?߱????鸻????ͼ??
kkUp=kkTab[kkTab$NES>0,]
termNum=5     #????չʾͨ·????Ŀ??չʾǰ5??????????????ͨ·
if(nrow(kkUp)>=termNum){
showTerm=row.names(kkUp)[1:termNum]      #??ȡչʾͨ·??????
gseaplot=gseaplot2(kk, showTerm, base_size=8, title="Enriched in ICD high group")
pdf(file="GSEA.highrisk.pdf", width=7, height=5.5)
print(gseaplot)
dev.off()
}
#????ICD?ͱ????鸻????ͼ??
kkDown=kkTab[kkTab$NES<0,]
termNum=5     #????չʾͨ·????Ŀ??չʾǰ5??????????????ͨ·
if(nrow(kkDown)>=termNum){
showTerm=row.names(kkDown)[1:termNum]      #??ȡչʾͨ·??????
gseaplot=gseaplot2(kk, showTerm, base_size=8, title="Enriched in ICD low group")
pdf(file="GSEA.lowrisk.pdf", width=7, height=5.5)
print(gseaplot)
dev.off()
}
View(kkDown)
#????ICD?ͱ????鸻????ͼ??
kkDown=kkTab[kkTab$NES<0,]
termNum=2     #????չʾͨ·????Ŀ??չʾǰ5??????????????ͨ·
if(nrow(kkDown)>=termNum){
showTerm=row.names(kkDown)[1:termNum]      #??ȡչʾͨ·??????
gseaplot=gseaplot2(kk, showTerm, base_size=8, title="Enriched in ICD low group")
pdf(file="GSEA.lowrisk.pdf", width=7, height=5.5)
print(gseaplot)
dev.off()
}
